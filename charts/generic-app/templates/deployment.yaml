{{ $values := .Values }}
{{- $fullName := include "generic-app.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "generic-app.labels" . | nindent 4 }}
  annotations:
    link.argocd.argoproj.io/external-link: "https://{{ .Values.host }}"
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "generic-app.selectorLabels" . | nindent 6 }}
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: {{ .Values.deploymentStrategy }}
  template:
    metadata:
      labels:
        {{- include "generic-app.selectorLabels" . | nindent 8 }}
        {{- if $values.prometheus.enabled }}
        monitoring: "true"
        {{- end }}
      annotations:
        checksum/env: {{ $values.env | toString | sha256sum }}
        checksum/envEncrypted: {{ $values.envEncrypted | toString | sha256sum }}
        {{- if $values.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: {{ $values.prometheus.path | quote }}
        {{- end }}
    spec:
      containers:
        - name: {{ $fullName }}
          image: {{ $values.image }}:{{ $values.tag }}
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: {{ $values.port }}
          {{- if or $values.env $values.envEncrypted }}
          envFrom:
          {{- if $values.env }}
            - configMapRef:
                name: {{ $fullName }}
          {{- end }}
          {{- if $values.envEncrypted }}
            - secretRef:
                name: {{ $fullName }}
          {{- end }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: [ "sleep", "10" ]
          {{- if $values.healthCheckPath }}
          livenessProbe:
            httpGet:
              path: {{ $values.healthCheckPath }}
              port: http
            failureThreshold: 3
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: {{ $values.healthCheckPath }}
              port: http
            failureThreshold: 60
            periodSeconds: 5
          {{- end }}
          {{- if $values.volumes }}
          volumeMounts:
            {{- range $volumeName, $volume := $values.volumes }}
            - name: {{ $volumeName }}
              mountPath: {{ $volume.mountPath }}
            {{- end }}
          {{- end }}
      {{- if $values.volumes }}
      volumes:
        {{- range $volumeName, $volume := $values.volumes }}
        - name: {{ $volumeName }}
          persistentVolumeClaim:
            claimName: {{ $fullName }}-{{ $volumeName }}
        {{- end }}
      {{- end }}
---
{{- if $values.workers }}
{{- range $keyWorker, $valuesWorker := $values.workers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-{{ $keyWorker }}
  labels:
    {{- include "generic-app.labels" $ | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $fullName }}-{{ $keyWorker }}
  replicas: {{ $valuesWorker.replicas }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $fullName }}-{{ $keyWorker }}
      annotations:
        checksum/env: {{ $values.env | toString | sha256sum }}
        checksum/envEncrypted: {{ $values.envEncrypted | toString | sha256sum }}
    spec:
      containers:
        - name: {{ $fullName }}-{{ $keyWorker }}
          image: {{ $values.image }}
          imagePullPolicy: Always
          command:
            {{- range (split " " $valuesWorker.command) }}
            - {{ . | quote  }}
            {{- end }}
          {{- if or $values.env $values.envEncrypted }}
          envFrom:
          {{- if $values.env }}
            - configMapRef:
                name: {{ $fullName }}
          {{- end }}
          {{- if $values.envEncrypted }}
            - secretRef:
                name: {{ $fullName }}
          {{- end }}
          {{- end }}
{{- end }}
---
{{- end }}