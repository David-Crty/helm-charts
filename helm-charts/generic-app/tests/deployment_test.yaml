# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json

suite: test deployment
release:
  name: test
chart:
  version: 0.1.0
templates:
  - deployment.yaml
tests:
  - it: should have init containers
    set:
      initContainers:
        - name: db-migrate
          command: [ 'bin/console', 'doctrine:migrations:migrate', '-n' ]
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0]
          value:
            name: db-migrate-test-generic-app
            image: hello-world:latest
            imagePullPolicy: Always
            command:
              - bin/console
              - doctrine:migrations:migrate
              - '-n'
  - it: should have init containers with custom image
    set:
      initContainers:
        - name: db-migrate
          command: [ 'bin/console', 'doctrine:migrations:migrate', '-n' ]
          image: hello-world-innit
          tag: "123"
    asserts:
      - equal:
          path: spec.template.spec.initContainers[0]
          value:
            name: db-migrate-test-generic-app
            image: hello-world-innit:123
            imagePullPolicy: Always
            command:
              - bin/console
              - doctrine:migrations:migrate
              - '-n'
  - it: should have volume mounts for data
    set:
      volumes:
        data:
          size: 1Gi
          storageClass: ""
          mountPath: /data
    asserts:
      - matchSnapshot: { }
  - it: should have php production envs
    set:
      webdevopsPhpProductionEnvs: true
    asserts:
      - contains:
          path: spec.template.spec.containers[0].env
          content:
            name: php.opcache.validate_timestamps
            value: "0"
  - it: should have volume mounts for configmap
    set:
      volumes:
        cm:
          mountPath: /data
          configMap:
            name: my-configmap
    asserts:
      - matchSnapshot: { }
  - it: should have a worker pod
    set:
      env:
        TEST: test
      workers:
        consumer:
          command: [ 'bin/console', 'messenger:consume', 'async', '-vv' ]
          env:
            TEST_CONSUMER: test
    asserts:
      - matchSnapshot: { }
  - it: should have a security context
    set:
      securityContext:
        runAsUser: 1000
        capabilities:
          add:
            - NET_ADMIN
    asserts:
      - equal:
          path: spec.template.spec.containers[0].securityContext
          value:
            runAsUser: 1000
            capabilities:
              add:
                - NET_ADMIN
