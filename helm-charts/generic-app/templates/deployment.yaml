{{- $fullName := include "generic-app.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "generic-app.labels" . | nindent 4 }}
  annotations:
    link.argocd.argoproj.io/external-link: "https://{{ .Values.host }}"
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      {{- include "generic-app.webSelectorLabels" . | nindent 6 }}
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "generic-app.webSelectorLabels" . | nindent 8 }}
        {{- if .Values.prometheus.enabled }}
        monitoring: "true"
        {{- end }}
      annotations:
        checksum/env: {{ .Values.env | toString | sha256sum }}
        checksum/envEncrypted: {{ .Values.envEncrypted | toString | sha256sum }}
        {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: {{ .Values.prometheus.path | quote }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "generic-app.serviceAccountName" . }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- range $initContainer := .Values.initContainers }}
        - name: {{ $initContainer.name | include "toSlug" }}-{{ $fullName }}
          image: {{ if $initContainer.image }}{{ include "generic-app.image" $initContainer | quote }}{{ else }}{{ include "generic-app.image" $.Values | quote }}{{ end }}
          imagePullPolicy: Always
          {{- if $.Values.runAsUser }}
          securityContext:
            runAsUser: {{ $.Values.runAsUser }}
          {{- end }}
          command:
            {{- range $initContainer.command }}
            - {{ . | quote }}
            {{- end }}
          {{- if $initContainer.args }}
          args:
            {{- range $initContainer.args }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if or $.Values.env $.Values.envEncrypted }}
          envFrom:
            {{- if $.Values.env }}
            - configMapRef:
                name: {{ $fullName }}
            {{- end }}
            {{- if $.Values.envEncrypted }}
            - secretRef:
                name: {{ $fullName }}
            {{- end }}
          {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: {{ $fullName }}
          image: {{ include "generic-app.image" $.Values | quote }}
          imagePullPolicy: Always
          resources: {{- include "common.resources.preset" $ | nindent 12 }}
          {{- if .Values.runAsUser }}
          securityContext:
              runAsUser: {{ .Values.runAsUser }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          {{- if or .Values.webdevopsPhpProductionEnvs .Values.trustedProxiesEnv }}
          env:
              {{- if .Values.webdevopsPhpProductionEnvs }}
              - name: php.opcache.fast_shutdown
                value: "1"
              - name: php.opcache.interned_strings_buffer
                value: "64"
              - name: php.opcache.max_accelerated_files
                value: "50000"
              - name: php.opcache.memory_consumption
                value: "512"
              - name: php.opcache.revalidate_freq
                value: "0"
              - name: php.opcache.validate_timestamps
                value: "0"
              - name: php.realpath_cache_size
                value: "4096K"
              - name: php.realpath_cache_ttl
                value: "600"
              {{- end }}
              {{- if .Values.trustedProxiesEnv }}
              - name: TRUSTED_PROXIES
                value: "10.0.0.0/16"
              {{- end }}
          {{- end }}
          {{- if or .Values.env .Values.envEncrypted }}
          envFrom:
          {{- if .Values.env }}
            - configMapRef:
                name: {{ $fullName }}
          {{- end }}
          {{- if .Values.envEncrypted }}
            - secretRef:
                name: {{ $fullName }}
          {{- end }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: [ "sleep", "10" ]
          {{- if .Values.healthCheckPath }}
          livenessProbe:
            httpGet:
              path: {{ .Values.healthCheckPath }}
              port: http
            failureThreshold: 3
            periodSeconds: 10
            timeoutSeconds: 3
          startupProbe:
            httpGet:
              path: {{ .Values.healthCheckPath }}
              port: http
            failureThreshold: 20
            periodSeconds: 5
            timeoutSeconds: 3
            initialDelaySeconds: 3
          {{- end }}
          {{- if .Values.volumes }}
          volumeMounts:
            {{- range $volumeName, $volume := .Values.volumes }}
            - name: {{ $volumeName }}
              mountPath: {{ $volume.mountPath }}
            {{- end }}
          {{- end }}
      {{- if .Values.volumes }}
      volumes:
        {{- range $volumeName, $volume := .Values.volumes }}
        - name: {{ $volumeName }}
          {{- if $volume.configMap }}
          configMap:
            {{- with $volume.configMap }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ $fullName }}-{{ $volumeName }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if .Values.runAsUser }}
      securityContext:
        fsGroup: {{ .Values.runAsUser }}
      {{- end }}
---
{{- if .Values.workers }}
{{- range $keyWorker, $valuesWorker := .Values.workers }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-{{ $keyWorker }}
  labels:
    {{- include "generic-app.labels" $ | nindent 4 }}
spec:
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name-worker: {{ $fullName }}-{{ $keyWorker }}
      {{- include "generic-app.workerSelectorLabels" $ | nindent 6 }}
  replicas: {{ $valuesWorker.replicas }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name-worker: {{ $fullName }}-{{ $keyWorker }}
        {{- include "generic-app.workerSelectorLabels" $ | nindent 8 }}
      annotations:
        checksum/env: {{ $.Values.env | toString | sha256sum }}
        checksum/envEncrypted: {{ $.Values.envEncrypted | toString | sha256sum }}
    spec:
      containers:
        - name: {{ $fullName }}-{{ $keyWorker }}
          image: {{ if $valuesWorker.image }}{{ include "generic-app.image" $valuesWorker.image | quote }}{{ else }}{{ include "generic-app.image" $.Values | quote }}{{ end }}
          imagePullPolicy: Always
          resources: {{- include "common.resources.preset" $ | nindent 12 }}
          command:
            {{- range $valuesWorker.command }}
            - {{ . | quote }}
            {{- end }}
          {{- if $valuesWorker.args }}
          args:
            {{- range $valuesWorker.args }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if or $.Values.env $.Values.envEncrypted }}
          {{- if $valuesWorker.env }}
          env:
          {{- range $key, $value := $valuesWorker.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
          {{- end }}
          {{- end }}
          envFrom:
          {{- if $.Values.env }}
            - configMapRef:
                name: {{ $fullName }}
          {{- end }}
          {{- if $.Values.envEncrypted }}
            - secretRef:
                name: {{ $fullName }}
          {{- end }}
          {{- end }}
{{- end }}
---
{{- end }}